@using DualPrep

@model PaginatedList<DualPrep.Models.Exercise>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

    <div class="DP-List">
        <h1>Exercises</h1>

        <p>
            <a class="DP-CreateBTN" asp-action="Create">Create</a>
        </p>
        <br />

        <form method="get" asp-action="Index">
            <p>
                <input type="search" placeholder="search here." values="@ViewData["GetExerciseSearch"]" name="exerciseSearch" />
                <input type="submit" value="search" />
                <a asp-action="Index">All Exercises</a>
            </p>
        </form>


        <div>

            @foreach (var item in Model)
            {
                <a asp-action="Details" asp-route-id="@item.Id"><p class="DP-ItemName DP-WordWrap">@Html.DisplayFor(modelItem => item.Name)</p></a>
                <p class="DP-WordWrap">
                    @Html.DisplayFor(modelItem => item.Summary)
                </p>
                <p class="DP-WordWrap">
                    @Html.DisplayNameFor(model => item.Equipment):
                    @Html.DisplayFor(modelItem => item.Equipment)
                </p>
                <p class="DP-WordWrap">
                    @Html.DisplayNameFor(model => item.Muscle):
                    @Html.DisplayFor(modelItem => item.Muscle)
                </p>

                <a asp-action="Details" asp-route-id="@item.Id">Details</a>

                @if (item.CreatedByUser == ViewBag.UserId)
                {
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                }

                @if (User.IsInRole("Administrator"))
                {
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                }

                <div class="DP-ListWhiteSpace"> </div>
                <hr />
            }

            @{
                var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            }

            <a asp-action="Index"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["GetExerciseSearch"]"
               class="@prevDisabled">
                Previous
            </a>
            <a asp-action="Index"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["GetExerciseSearch"]"
               class="@nextDisabled">
                Next
            </a>

        </div>
    </div>
